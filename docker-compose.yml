services:
  auth:
    build:
      context: ./auth_service
    volumes:
      - ./auth_service:/app
    command: sh -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    ports:
      - "8000:8000"
    networks:
      - backend
  billing-db:
    image: postgres:15
    environment:
      POSTGRES_USER: billing_user
      POSTGRES_PASSWORD: supersecret
      POSTGRES_DB: billing
    volumes:
      - billing-db-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - backend

  billing:
    build:
      context: ./billing_service
    volumes:
      - ./billing_service:/app
      - ./billing_service/migrations:/app/migrations
    command: air
    environment:
      - DB_HOST=billing-db
      - DB_PORT=5432
      - DB_USER=billing_user
      - DB_PASSWORD=supersecret
      - DB_NAME=billing
    ports:
      - "8090:8090"
    depends_on:
      - billing-db
    networks:
      - backend

  gateway:
    build:
      context: ./api_gateway
    ports:
      - "8080:8080"   
    volumes:
      - ./api_gateway:/app
    command: air
    environment:
      - AUTH_URL=http://auth:8000
      - BILLING_URL=http://billing:8090
      - UI_URL=http://localhost:3000
    depends_on:
      - auth
      - billing
    networks:
      - backend

  payment:
    build:
      context: ./payment_service
    volumes:
      - ./payment_service:/app
    command: python server.py
    ports:
      - "50051:50051"
    networks:
      - backend

  ui:
    build:
      context: ./ui
    command: npm run dev
    volumes:
      - ./ui:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    networks:
      - backend

networks:
  backend:
    driver: bridge

volumes:
  billing-db-data:
